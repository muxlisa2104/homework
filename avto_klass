
#1-topshiriq
# Avto degan yangi klass yarating. Unga avtomobillarga doir bo'lgan bir nechta xususiyatlar
# (model, rang, korobka, narh va hokazo) qo'shing.
# Ayrim xususiyatlarga standart qiymat bering (masalan, kilometer=0)

# 2-topshiriq
# Avto ga oid obyektning xususiyatlarini qaytaradigan metodlar yozing

# 3-topshiriq
# get_info() metodi avti haqida to'liq ma'lumotni matn ko'rinishida qaytarsin

# 4-topshiriq
# Avto ga oid obyektning xususiyatlarini yangilaydigan metodlar yozing.

# 5-topshiriq
# update_km() metodi son qabul qilib olib, avtomobilning yurgan kilometrajini yangilab borsin
class Avto():
    """Avto nomli klass yaratamiz"""
    def __init__(self, model, rang, karobka, narh):
        """Avtoning xususiyatlari"""
        self.model = model
        self.rang = rang
        self.karobka = karobka
        self.narh = narh
        self.kilometr = 0

    def get_info(self):
        """Avto haqida ma'lumot"""
        return (f"Modeli: {self.model}. Rangi: {self.rang}."
                f" Karobka: {self.karobka}. Narhi:  {self.narh}. Kilometri: {self.kilometr} ")
    def set_km(self, kilometr):
        """Avtoning kilometrini yangilovchi metod"""
        self.kilometr = kilometr
    def update_km(self):
        """Avtoning kilometrini 10 km ga ko'paytiradi"""
        self.kilometr += 10
    def avto_model(self):
        """Avtoning modelini qaytaradi"""
        return f"Avtomobilning modeli: {self.model}. "
    def avto_rang(self):
        """Avtoning rangini qaytaradi"""
        return f"Avtomobilning rangi: {self.rang}.  "
    def avto_karobka(self):
        """Avtoning karobkasini qaytaradi"""
        return f"Avtomobilning karobkasi: {self.karobka}. "
    def avto_narh(self):
        """Avtoning narhini qaytaradi"""
        return f"Avtomobilning narhi: {self.narh}. "
    def avto_kilometr(self):
        """Avtoning kiometrini qaytaradi"""
        return f"Avtomobilning kilometri: {self.kilometr}. "

avto1=Avto("Gentra", "qora", "avtomat", 5000000)
avto2 = Avto("Malibu", "Oq", "mexanik", 20000000)
print(avto1.avto_model(), avto1.avto_rang(), avto1.avto_karobka(), avto1.avto_narh())
print(avto1.get_info())
print(avto2.avto_model(), avto2.avto_rang(), avto2.avto_karobka(), avto2.avto_narh())
print(avto2.get_info())
avto1.update_km()
print(avto1.get_info())
avto2.update_km()
print(avto2.get_info())

# 6-topshiriq
# Yangi, Avtosalon degan klass yarating va kerakli xususiyatlar bilan to'ldiring
# (salon nomi, manzili, sotuvdagi avtomobillar va hokazo)

# #7-topshiriq
# Avtosalonga yangi avtomobillar qo'shish uchun metod yozing

# 8-topshiriq
# Avtosalondagi avtomobillar haqida ma'lumot qaytaruvchi metod yozing


# 9-topshiriq
# Yuqoridagi obyektlar va ularga tegishli metodlarni tekshirib ko'ring

# 10-topshiriq
# dir() funksyasi va __dict__ metodi yordamida o'zingiz yozgan va 
# Pythondagi turli klass va obyektlarning xususiyatlari va metodlarini toping (dir(str),
# dir(int) va hokazo)




class Avtosalon():
    """Avtosalon nomli klass yaratamiz"""
    def __init__(self, salon_nomi, manzili, avtomobillar):
        """Avtosalon haqida ma'lumot"""
        self.name = salon_nomi
        self.adress = manzili
        self.avto = avtomobillar
        self.avto_soni=0
        self.avtolar=[]
    def add_avto(self,avto):
        """Avtolar sonini 1 ga ko'paytirish"""
        self.avtolar.append(avto)
        self.avto_soni += 1

    def get_name(self):
        """Avtosalon nomi"""
        return self.name

    def get_avto(self):
        """Avtosalonga yozilgan avtolar"""
        return [avto .get_info() for x in self.avtolar]

    def get_avto_num(self):
        """Avtosalonga yozilgan avtolar soni"""
        return self.avto_soni


print(dir(Avto))
print(dir(Avtosalon))

def see_methods(klass):
    return [method for method in dir(klass) if method.startswith('__') is False]

print(see_methods(Avto))
print(see_methods(Avtosalon))

print(see_methods(avto1))

print(avto1.__dict__)

print(avto1.__dict__.keys())
